"use script"
// Метод Math.pow возводит число в заданную степень. 
// Первым параметром передается число, вторым - в какую степень его возвести.
// Синтаксис
// Math.pow(число, степень)
// Возведите 2 в 10 степень. 
// document.write (Math.pow(2 , 10))

// Метод Math.sqrt возвращает квадратный корень числа.
// Синтаксис
// Math.sqrt(положительное число)

// document.write (Math.sqrt(49)) ;


// Метод Math.round выполняет округление до ближайшего целого числа
//  по правилам математического округления.
// Синтаксис
// Math.round(число)

// Найдите квадратный корень из 379. Результат округлите до целых, до десятых, до сотых. 
// console.log(Math.round(Math.sqrt(379)));

//  Метод Math.ceil производит округление дробного числа до целого всегда в большую сторону.
// Синтаксис
// Math.ceil(число)



// Метод toFixed производит округление числа до указанного знака в дробной части.

// Количество знаков указывается параметром.

// Если число знаков не указано, то по умолчанию берется 0 знаков, то есть округление до целого числа.
// Синтаксис
// число.toFixed([количество знаков в дробной части]);

// Метод toPrecision округляет число до заданного знака. В отличие от Math.round округление можно проводить не только в дробной части.

// Параметром метода указывается сколько цифр должно остаться в числе. Остальные цифры будут отброшены. Последнее оставшееся число будет округлено по правилам математического округления.

// Если указанное количество знаков не достижимо обрезанием десятичной части - переводит число в экспоненциальную форму.

// Экспоненциальная форма - это числа вида 1.2e+3. Чтобы преобразовать в нормальную форму нужно сделать так: 1.2e+3 = 1.2 * 10*3 = 1.2 * 1000 = 1200.

// Если параметр пуст, то будет возращено исходное число.
// Синтаксис
// число.toPrecision(длина);

// Найдите квадратный корень из 587. Округлите результат в большую и меньшую стороны, 
// запишите результаты округления в объект с ключами 'floor' и 'ceil'. 
// let obj = {}
// obj['floor'] = Math.floor(Math.sqrt(587)) ;
// obj['ceil'] = Math.ceil(Math.sqrt(587)) ;

// console.log(obj);


//  Метод Math.max возвращает максимальное число из группы чисел, переданных в функцию.

// Если в функцию ничего не передано, то будет возращено -Infinity.

// По умолчанию функция не работает с массивами, однако с помощью хитрого приема можно найти максимальное значение массива: Math.max.apply(null, arr), где arr - произвольный массив.
// Синтаксис
// Math.max(число, число, число...)



//  Метод Math.min возвращает минимальное число из группы чисел, переданных параметрами.

// Если параметрами ничего не передано, то будет возращено Infinity.

// По умолчанию метод не работает с массивами, однако с помощью хитрого приема можно найти минимальное значение массива: Math.min.apply(null, arr), где arr - произвольный массив.
// Синтаксис
// Math.min(число, число, число...);

// Даны числа 4, -2, 5, 19, -130, 0, 10. Найдите минимальное и максимальное число. 

// console.log('min : ' + Math.min(4, -2, 5, 19, -130, 0, ));
// console.log('max : ' + Math.max(4, -2, 5, 19, -130, 0, ));

//  Метод Math.random возвращает случайное дробное число от 0 до 1.
// Синтаксис
// Math.random()
// Применение

// Чтобы получить случайное число в определенном промежутке (дробное или целое) 
// следует пользоваться специальными приемами.

// Получение случайного дробного числа между min и max:
// function getRandomArbitary(min, max) {
// 	return Math.random() * (max - min) + min;
// }

// Получение случайного целого числа между min и max:
// function getRandomInt(min, max) {
// 	return Math.floor(Math.random() * (max - min + 1)) + min;
// }

// Выведите на экран случайное целое число от 1 до 100. 

// function getRandomInt(min, max) {
// 	return console.log(Math.floor(Math.random() * (max - min + 1)) + min)
// }
// getRandomInt(1, 100)

// С помощью цикла заполните массив 10-ю случайными целыми числами. 
// let arr = [] ;
// let a 
// function getRandomInt(min, max) {
//  a = Math.floor(Math.random() * (max - min + 1)) + min
// }

// getRandomInt(1, 1000);
// for ( let i = 1 ; i <= 10 ;i ++)
// {
// arr.push(a)
// }
// console.log(arr);

//  Метод Math.abs возвращает модуль числа, то есть из отрицательного числа делает положительное.
// Синтаксис
// Math.abs(число)

// Метод toUpperCase производит преобразование строки в верхний регистр (из маленьких букв делает большие). При этом возвращается новая строка, а исходная строка не меняется.
// Синтаксис
// строка.toUpperCase()
// Пример

// Давайте преобразуем все буквы в большие:
// let str = 'Язык JavaScript';
// console.log(str.toUpperCase());

// Результат выполнения кода:
// 'ЯЗЫК JAVASCRIPT'

//  Метод toLowerCase производит преобразование строки в нижний регистр (из больших букв делает маленькие). При этом возвращается новая строка, а исходная строка не меняется.
// Синтаксис
// строка.toLowerCase()
// Пример

// Давайте преобразуем все большие буквы строки в маленькие:
// let str = 'Язык JAVASCRIPT';
// console.log(str.toLowerCase());

// Результат выполнения кода:
// 'язык javascript'

